From ac0ce9717f5ac4eaeb0fda81d96a76b6f36a20cd Mon Sep 17 00:00:00 2001
From: Vladimir Slavik <vslavik@redhat.com>
Date: Mon, 5 Sep 2022 13:35:26 +0200
Subject: [PATCH] Run yelp under liveuser with the right environment

The XAUTHORITY variable is not handled, but that is not needed as of now.

Resolves: rhbz#2124097
---
 pyanaconda/ui/lib/help.py                     | 34 +++++++++++++++----
 .../pyanaconda_tests/ui/test_help.py          | 28 +++++++++++----
 2 files changed, 50 insertions(+), 12 deletions(-)

diff --git a/pyanaconda/ui/lib/help.py b/pyanaconda/ui/lib/help.py
index 68399e0b6a4..49f6b4845b4 100644
--- a/pyanaconda/ui/lib/help.py
+++ b/pyanaconda/ui/lib/help.py
@@ -236,21 +236,25 @@ def _find_best_help_file(current_locale, available_files):
     return None
 
 
+# Help user data
+HelpUser = namedtuple("HelpUser", ["name", "uid"])
+
+
 def _get_help_user():
-    """Get the uid to run help viewer under.
+    """Get the user name and uid to run help viewer under.
 
     Currently, this means: Let's see if we can run yelp under liveuser on live.
     For details, see: https://bugzilla.redhat.com/show_bug.cgi?id=2118832
 
-    :return: user
-    :rtype: int | None
+    :return: user name and uid
+    :rtype: HelpUser | None
     """
     if not conf.system.provides_liveuser:
         return None
 
     try:
         user = getpwnam("liveuser")
-        return user.pw_uid
+        return HelpUser(name="liveuser", uid=user.pw_uid)
     except KeyError:
         return None
 
@@ -283,5 +287,23 @@ def show_graphical_help(help_path, help_anchor=None):
         args.append(help_path)
 
     user = _get_help_user()
-
-    yelp_process = startProgram(["yelp", *args], reset_lang=False, user=user)
+    if user:
+        user_id = user.uid
+        env_prune = ("GDK_BACKEND",)
+        env_add = {
+            "XDG_RUNTIME_DIR": "/run/user/{}".format(user_id),
+            "USER": user.name,
+            "HOME": "/home/{}".format(user.name),
+        }
+    else:
+        user_id = None
+        env_prune = None
+        env_add = None
+
+    yelp_process = startProgram(
+        ["yelp", *args],
+        reset_lang=False,
+        user=user_id,
+        env_prune=env_prune,
+        env_add=env_add,
+    )
